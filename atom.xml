<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xin Wang&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/6b4384ed67fe8c02cbba591f86f804ef</icon>
  <subtitle>仅此一生，竭尽全力</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://tracyxinwang.site/blog/"/>
  <updated>2018-10-04T03:19:03.162Z</updated>
  <id>http://tracyxinwang.site/blog/</id>
  
  <author>
    <name>Tracy Xin Wang</name>
    <email>wangxin@link.cuhk.edu.hk</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>思维模型总结</title>
    <link href="http://tracyxinwang.site/blog/2018/10/03/thinking-system/"/>
    <id>http://tracyxinwang.site/blog/2018/10/03/thinking-system/</id>
    <published>2018-10-03T13:09:45.000Z</published>
    <updated>2018-10-04T03:19:03.162Z</updated>
    
    <content type="html"><![CDATA[<p><em>大部分内容来源于L先生说，此处是一些个人总结。</em></p><p>思维模型(Mental model): 每个人认知世界、思考问题的基本模式和习惯</p><p>Keywords: <strong>本质，规律，原则</strong></p><p>本质：一个事物在变化的过程中，或者穷尽各种可能性的前提下，所维持不变的那一部分。</p><p>or example:<br>公司的本质是整合资源。无论什么行业、什么领域，只要资源存在错配和空缺，公司就得以存在；而一旦资源能高效运作、对接起来，公司就没必要存在。<br>汽车的本质是出行。在这个过程中，保证便捷、安全、高效，才是汽车最核心的存在理由。其他一切，都只是建筑在这个本质上面的浅层需求罢了。</p><h3 id="二阶模型"><a href="#二阶模型" class="headerlink" title="二阶模型"></a>二阶模型</h3><ul><li>如果这样做，短时间内会得到什么样的结果 （一阶）</li><li>如果得到了这个结果，在较长时间后，会产生哪些新的可能性和结果？（二阶）</li></ul><p>本质上是个可能性分析的问题，有必要时可跟概率进行联系。</p><h3 id="整体思维"><a href="#整体思维" class="headerlink" title="整体思维"></a>整体思维</h3><p>整体思维基于两个假设：</p><ul><li>一切事物在底层上都是相互联系的</li><li>整体能够提供比个体本身更多的信息</li></ul><p>关于整体思维的训练方式：</p><ul><li>它的背景和场景是什么</li><li>它为什么出现</li><li>它的出现带来了什么，导致了什么？</li></ul><p>其实这个思维方式可以理解成 3W 问题，即：Where, Why, What. 对于要研究的对象，建立联系图，挖掘底层的东西，并与自己的所知道的系统进行联系。</p><p><strong>系统思维</strong><br>系统就是「元素」和「结构」的组合。把一定的元素，通过不同的结构、方式组合起来，使它们具备整体性，这就构成了一个「系统」。<br>基于的假设：系统就是一个<em>转换</em>(transformation)的过程。<br>即，系统的存在，一定是因为它达成了一种「转换」：能将某些不够好的、无序的状态，转变成更优的、有序的状态。</p><p>从工程上来讲，a system has input and output. 如果以系统思维来思考问题的话，其实就是理解什么是input, system中的transfer function 指代的是什么，以及output 可以有哪些情况。</p><p>系统思维在生活中的应用：公司可以看作系统，城市可以看做系统，一个餐饮店，一个班级，一个公众号，都可以看做一个完备的、小小的系统。</p><hr><p>关于寻求本质的一些思维模型：</p><p><strong>输入 - 输出模型(IO模型)</strong><br>问： 一个行为、过程和系统，它的初始形态是什么？它的最终形态又是什么？<br>去关注：一样事物，它变化之前是什么，变化之后又是什么？</p><blockquote><p>不要去关注产品，而是要去关注：消费者想通过这个产品，达到一种什么样的状态？我们有没有什么方法帮助他们达到这个状态？这就是创新的要义。</p></blockquote><p><strong>供给 - 需求模型(SD模型)</strong><br>问：它们为什么可以连接起来？彼此的供给和需求是什么？</p><ul><li>我有什么？</li><li>谁需要这些东西？</li><li>我如何能把已有的东西，转变为别人需要的东西？</li></ul><p><strong>动力 - 阻力模型(PO模型)</strong><br>很多问题的本质，其实都是动力和阻力的博弈。动力超过阻力，改变就会发生，行为就会成立，反之，就会停滞。<br>问：推动一件事情的动力是什么？如果它发生了，阻力又是什么？</p><p><strong>改变 - 不变模型(CS模型)</strong><br>对于生活中的现象和事实，问：经历了这些复杂的过程，它改变的是什么？不变的又是什么？<br>这些不变的东西，很可能就是它所赖以持存、构成其本质的部分。</p><p>当你接触到一个陌生领域时，多搜集一些相关的材料去观察：在这些材料里面，有没有哪几个关键词、哪几个概念，是一直都存在，没有改变过的？如果有，它们往往就是这个领域的关键节点。试着去把它们「连接」起来，就可以找到的是这个领域的本质。</p><p>Reference：<br>L先生说，36氪</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;em&gt;大部分内容来源于L先生说，此处是一些个人总结。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;思维模型(Mental model): 每个人认知世界、思考问题的基本模式和习惯&lt;/p&gt;
&lt;p&gt;Keywords: &lt;strong&gt;本质，规律，原则&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本质：一个事
      
    
    </summary>
    
    
      <category term="思考" scheme="http://tracyxinwang.site/blog/tags/%E6%80%9D%E8%80%83/"/>
    
      <category term="思维模型" scheme="http://tracyxinwang.site/blog/tags/%E6%80%9D%E7%BB%B4%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>关于拼多多上市的思考</title>
    <link href="http://tracyxinwang.site/blog/2018/09/30/PinDuoDuo/"/>
    <id>http://tracyxinwang.site/blog/2018/09/30/PinDuoDuo/</id>
    <published>2018-09-30T01:18:53.000Z</published>
    <updated>2018-09-30T01:38:58.856Z</updated>
    
    <content type="html"><![CDATA[<p>拼多多上市了。其实之前一直没有听说过这个拼多多，唯一的一次是因为我的妈妈发过来一条链接， 说要买个东西。 我当时想这是什么鬼，说你要买就在淘宝上买好了，为什么要在这个拼多多上买？ 她说大家一起拼可以很便宜，然后说周围的人都在上面买。我就很好奇，下载了这个软件，看上面到底有些什么。 然后发现价格确实挺低的，之后也没再管过，觉得这只是小APP在地方城市的小打小闹。直到那天看到它上市的新闻，瞬间惊呆了，我就在想到底它是凭什么上市的。 同时它的市值一度超过了网易，那网易这么容易被超过，又是为什么呢？ 当然这又是另外一个话题了，留着我以后去探究探究网易。这里我主要想来思考一下拼多多到底靠的是什么上市。 </p><p>先来说说网上整体的评价：一部分人不看好，觉得它太low了，卖得都是假货，迟早要垮。另一部分人觉得，它至少让生活在中国最底层的人学会了网购这件事情，多了一样选择性，而这部分人的体量是很大的，也不能忽视他们的消费能力。</p><p>先不说看好还是不看好吧，什么事情都有两面性，你也不能以一种标准去捧或者杀一个企业和它的前景。我就说说我看到的东西和思考的东西，再从这里面来找出他凭借的是什么上市的吧。</p><p><strong>观点一</strong>：PDD渗透的是五环外的中国，平行世界中的另外80%的人群，主打的也是三四五线的城市。<br><strong>思考</strong>：虽说主打的是三四五线城市，但是根据最后的比例分级图来看，一二线其实和淘宝的流量是差不多的。当然这可能是显得有点奇怪的，因为按照一般的思路来说，大家会觉得一二线的市民是不会去上面买东西的。所以首先这个一二线的划分标准，我觉得是需要注意一下的，一二线城市，包不包含周边附属区县？然后还有另外一个要注意的是，其实哪怕就是一二线城市本身，他们所容纳的三线以下人群也绝对是占大数的。所以一二线城市的三线以下人群买的东西，是会寄到一二线城市的，那这个肯定是算在一二线的消费组成里面的。所以这个是需要注意的。<br><img src="/blog/images/pdd_1.png" width="50%" height="50%"><br>那么其实我是更倾向用平行世界的80%的人群消费来描述，而不是按一二三线这种城市来划分。我没有比较过到底一二线城市的外来务工人口与本地人口的比例，也没有比较过一二线城市与三四线城市的人口比例(当然用数据说话是再好不过了)，但是有一点可以肯定，非土著一二线的人口肯定是大得多的。捡便宜是中国老一辈的习惯，就是喜欢买便宜的，而对于新一代的，如果在没有被提高认知之前，他们也会是这种思维模式，所以不管年龄层次，在便宜这一点上，就能带来大的网络流量了。</p><p><strong>观点二</strong>：假货，山寨<br><strong>思考</strong>：这个确实是，当我的妈妈说起这个软件的时候，我的第一反应就是骗人的，没好货。当时看的一些观点当中，有个人说的我觉得特别好，他说PDD解决的是低收入人群有与没有的事情，还没有到解决商品好与差的地步。这个我觉得是说的很中肯的，我们不能拿我们的认知去跟最底层的人们比较，就像很多谦虚的知识分子经常说，你不能拿你有的东西，觉得别人也是理所当然的有一样。的确假货，欺骗消费者这些东西，我们是该摒弃的，如果是作为一家还算是有良心的企业的话，到之后肯定会解决这个事情的，因为这影响到声誉，而中国的生意人是最看中声誉这个东西了的，更何况还上市了。但是我们忽略了一点，企业的目的是赚钱，在能够引入大量流量下，是绝对可能做出暂时回避假货这种东西而默许其存在这种事情的。毕竟风头过了，好好转个型树立一下品牌，又是一条好汉。所以我觉得这也是资本不去把这个当作一个致命点而不看好PDD的其中一个原因。只要能赚钱，我管你怎么赚。“互联网和移动互联网万年不变的思维，是先有海量用户，然后才是分级。” PDD也不可能做教育了客户如何网购然后把这些客户白白送给淘宝京东这种傻事情的。</p><p><strong>观点三</strong>：“中国接近一半的人口，还没有接入互联网；还有4.5亿人完全没有被纳入正规金融体系，超过9亿人没有贷款记录，仅有大概2亿人拥有信用卡；贫富差距巨大，穷人很多很多。”<br><strong>思考</strong>：中国的贫富差距是很大，同时贫富的人口比例差距也是很大的，但是我们要把这个事情往金融体系，信用卡这上面套，我觉得还有很长的路要走。而且不是说中国就一定要往这条路上走，我个人觉得在中国信用卡这种玩法在下层人口上是很难玩得起来的，中国肯定会有一种新的玩法出现，能够囊括各阶层的人群。花呗算是一种，但还没有完全跳出信用卡的维度。而且还有一点就是传统的乡土人情，老一辈的思想就是不要借钱，不能负债，负债和借钱是一件很不光荣的事情，这涉及到思想文化的根基，传统的教育和文化让人们觉得这是一件很“没面子”的事情，而不是觉得这本来就是一种金融方式，没有对与错。说到这里，我还是觉得现阶段大众的金融经济知识都是很欠缺的，包括我自己。</p><h4 id="几个有趣的，还值得思考的现象："><a href="#几个有趣的，还值得思考的现象：" class="headerlink" title="几个有趣的，还值得思考的现象："></a>几个有趣的，还值得思考的现象：</h4><ol><li><p>拼多多在上海和纽约两地同时敲钟，但拼多多创始人黄峥没有去纽约敲钟。没有敲钟就算了，毕竟还有好多大企业的老总都没有去敲钟，但是连纽约都不去就有点厉害了。毕竟现在上市套现的套路太多了。。。不管装没装，这个创始人表现得还是比较淡定的，一定程度上说明他的眼界根本不在此，他觉得其实就是个小事。我在想到底是什么赋予一个创始人这样的心境，直到我看到他顺风顺水的简历，见过的大佬和他自身的实力，我觉得这是必然的，我也隐约觉得PDD说不定还真的能做出一点颠覆性的东西。而且黄峥的手上竟然有拼多多 50.7%的股权，不得不说很厉害。。。这说明他其实是对PDD的未来已经有想法的人，毕竟通过谷歌早就实现财富自由了，剩下的追求就是人生的事业了。</p></li><li><p>PDD把社交分享玩法玩得很溜，共同的特点都是门槛低、传播广。<br>陆奇加入PDD也是让人吃了一惊，属于独立董事，按官方说法是他目前不存在负责点什么的问题。不过黄峥有提到说考虑分布式人工智能的系统，即 做个模拟社交网络：”假设你的手机里有一个小秘书，在做购买决策时你的小秘书能够代替你去问你朋友的小秘书，这个手机的智能网络一定程度上模拟了人跟其他社会成员的交互。模拟这个网络有两个好处。第一，能够避免传统人工智能的偏好牢笼，不会因为你看了一张美女图，就一直给你推荐美女图。我们的分布式AI要做的是，如果你的人工智能里面有朋友连接，其实你的朋友就扮演了一个不停往里面输入有效信息的角色。第二，我们试图模拟群体的传播，比如把一件衣服、某一个特殊设计扔到一个群里，我们可以看它会以多快的速度传播、有多大的量，由此去预测一件衣服会不会变成流行款、多大程度上成为流行款，是1000件、2000件，还是5000件、1万件的流行？如果我们能精确地预测出这个数字，就可以让上游厂商提前安排产销，服装库存的问题就能够得到很大的缓解。” 以上的话出自黄峥，这个场景是挺有意思的，黄峥本身是做计算机的，他当然知道整个技术的关键点，如果能与PDD拿到的数据结合的话，那在社交这个上面的玩法，就可以多得多了，毕竟现在微信建立起来的社交，已经让人看到这个方向的留存度高，面积大了。</p></li><li><p>腾讯是拼多多第二大股东，持股比例高达 18.5%。<br>关于大公司(BAT)的站队还是躲不掉哈哈哈，腾讯的流量接口肯定是帮了拼多多很多的。目前看来基本是朝AT两方站队了，校招宣讲的时候也有注意到这两方旗下的部署基本涵盖整个互联网界了。这是一个很有意思的事情，我一直在想到底互联网公司还能活多久，虽然新一代互联网公司也在飞奔，但是还是没能完全离得了大公司，加上AI类公司的崛起且还没落地，也迫使互联网公司all in AI. 那这样下去的话，传统互联网公司部署足够远见的话，是不是还是可以延续很长一段命呢？但是有句话说的好，“君以此兴，必以此亡”。</p></li><li><p>网易也投了拼多多的。。<br><img src="/blog/images/pdd_2.png" width="50%" height="50%"><br>之前有新闻说网易严选会与PDD合作，看到这个投资历史，也不难解释了，毕竟丁磊也投了PDD，而且当年还是丁磊向段永平引荐的黄峥。</p></li></ol><h4 id="一些其他引申的思考"><a href="#一些其他引申的思考" class="headerlink" title="一些其他引申的思考"></a>一些其他引申的思考</h4><ol><li><p>电子设备的普及及重要程度：<br>电脑-手机-？<br>下一个是什么呢？我个人更倾向手表和眼镜这类可穿戴的设备</p></li><li><p>互联网时代，大家都这样说<br>BAT-TMD-MMP<br>BAT大家都知道，TMD头条美团滴滴，MMP是美团小米和拼多多<br>小米是很有意思的，其实到现在为止我都对小米印象不好，可能就是源于那个时候红米的饥饿营销。但是人是会变的，企业也是，我们不能拿一层不变的眼光去看待一个企业。小米目前的生态链与3C行业的结合，我觉得也是值得去深入研究的，这个先挖一个坑在这以后找时间填吧。</p></li></ol><p>Reference:<br><a href="http://www.qdaily.com/articles/55654.html" target="_blank" rel="noopener">http://www.qdaily.com/articles/55654.html</a><br><a href="https://www.huxiu.com/article/253176.html" target="_blank" rel="noopener">https://www.huxiu.com/article/253176.html</a><br><a href="https://www.zhihu.com/question/287038344" target="_blank" rel="noopener">https://www.zhihu.com/question/287038344</a><br><a href="https://xueqiu.com/6942182748/111174319" target="_blank" rel="noopener">https://xueqiu.com/6942182748/111174319</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;拼多多上市了。其实之前一直没有听说过这个拼多多，唯一的一次是因为我的妈妈发过来一条链接， 说要买个东西。 我当时想这是什么鬼，说你要买就在淘宝上买好了，为什么要在这个拼多多上买？ 她说大家一起拼可以很便宜，然后说周围的人都在上面买。我就很好奇，下载了这个软件，看上面到底有些
      
    
    </summary>
    
    
      <category term="杂文" scheme="http://tracyxinwang.site/blog/tags/%E6%9D%82%E6%96%87/"/>
    
      <category term="碎碎念" scheme="http://tracyxinwang.site/blog/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
      <category term="思考" scheme="http://tracyxinwang.site/blog/tags/%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu与Windows共享资源</title>
    <link href="http://tracyxinwang.site/blog/2018/09/27/SMB-Samba/"/>
    <id>http://tracyxinwang.site/blog/2018/09/27/SMB-Samba/</id>
    <published>2018-09-27T03:01:34.000Z</published>
    <updated>2018-09-27T07:17:38.733Z</updated>
    
    <content type="html"><![CDATA[<p>事情又是这样的，想与实验室一台公用的Linux server和自己的windows的共享资源，毕竟数据拿硬盘拷来拷去太麻烦了。Linux 下有Samba软件可以提供与Windows共享，所以打算用这个来搞一下。</p><h2 id="以下在-Linux-上操作"><a href="#以下在-Linux-上操作" class="headerlink" title="以下在 Linux 上操作"></a>以下在 Linux 上操作</h2><h3 id="安装samba："><a href="#安装samba：" class="headerlink" title="安装samba："></a>安装samba：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install samba</span><br></pre></td></tr></table></figure><h3 id="创建共享文件夹"><a href="#创建共享文件夹" class="headerlink" title="创建共享文件夹"></a>创建共享文件夹</h3><p>在home路径下创建一个你想共享的文件夹，名字自定，e.g. <code>DataShare</code>, 然后修改文件夹权限确保共享：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 777 /home/DataShare</span><br></pre></td></tr></table></figure></p><p>777表示将全部权限都放出来。</p><h3 id="修改samba配置文件"><a href="#修改samba配置文件" class="headerlink" title="修改samba配置文件"></a>修改samba配置文件</h3><p>为防止更改失败，先备份一下原文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/smaba/smb.conf /etc/samba/smb.conf.orig</span><br></pre></td></tr></table></figure></p><p>接下来修改配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/samba/smb.conf</span><br></pre></td></tr></table></figure></p><p>在文件最下面加上一下内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[share]</span><br><span class="line">path = /home/Datashare</span><br><span class="line">writable = yes</span><br><span class="line">avaliable = yes</span><br><span class="line">browseable = yes</span><br></pre></td></tr></table></figure></p><p>解释一下上面的内容，[share]指这个共享文件夹的别名，之后在window接入下会直接使用这个别名，用之前的名字实测并不可以。</p><h3 id="设置samba用户名"><a href="#设置samba用户名" class="headerlink" title="设置samba用户名"></a>设置samba用户名</h3><p>注意在设置之前，这个用户名一定是本身就已经是 linux 下的一个user, 不然会创建失败，所以最好先在linux下添加一个user:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo adduser shareuser</span><br></pre></td></tr></table></figure></p><p>然后会让你输入密码，记住这个密码，因为在之后设置samba用户时也需要同样的密码。<br>然后设置samba的登录密码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo touch /etc/samba/smbpasswd</span><br><span class="line">sudo smbpasswd -a shareuser</span><br></pre></td></tr></table></figure></p><p><code>touch</code>是指保存账户信息，<code>shareuser</code> 就是你要添加的用户名，之后会让你输入密码，这个密码就是之前创建user的那个密码。</p><h3 id="启动samba服务器并测试"><a href="#启动samba服务器并测试" class="headerlink" title="启动samba服务器并测试"></a>启动samba服务器并测试</h3><p>启动：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/samba restart</span><br></pre></td></tr></table></figure></p><p>测试：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">testparm</span><br></pre></td></tr></table></figure></p><h3 id="加入开机启动"><a href="#加入开机启动" class="headerlink" title="加入开机启动"></a>加入开机启动</h3><p>这部分我没有加，先留在这里备用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> smb.service</span><br><span class="line">systemctl <span class="built_in">enable</span> nmb.service</span><br><span class="line">systemctl start smb.service</span><br><span class="line">systemctl start nmb.service</span><br></pre></td></tr></table></figure></p><h3 id="查看Ubuntu的-IP"><a href="#查看Ubuntu的-IP" class="headerlink" title="查看Ubuntu的 IP"></a>查看Ubuntu的 IP</h3><p>是为了在windows上访问的时候添加使用：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure></p><p>出来一串的东西，找到ip记下来就好了。</p><h2 id="以下在Windows上操作"><a href="#以下在Windows上操作" class="headerlink" title="以下在Windows上操作"></a>以下在Windows上操作</h2><p>打开<code>我的电脑</code>，左边导航栏下面有个 <code>网络</code>, 右键选择 <code>映射网络驱动</code>，然后会让你输入samba服务器的地址和文件夹：</p><ul><li>驱动器选择默认的 z 就好</li><li>文件夹： <code>\\192.168.3.78\share</code>, 其中前面的ip就是你的linux的ip, 后面的<code>share</code>就是你创建共享文件夹的别名，同时注意斜杠不要打反了。。。</li><li>勾选 <code>使用其他凭据连接</code>,没有选的话可能会以默认的用户名登入，这样机会导致失败。因为当前的用户是你linux下的用户，名称并不匹配</li></ul><p>点击完成之后会要求输入网络凭据，用户名和密码就是你之前在linux下新添加的那个用户名和密码。点击确定之后就会连接，不出意外的话在此电脑下的网络位置里面，就能看到一个叫 <code>share</code>的z盘了。在里面拖放文件，就会发现可以自由共享了。简直不能再Nice！</p><!-- 下在局域网中可以通过 [SMB(Server Message Block)](https://wiki2.org/en/Server_Message_Block) 协议传输文件, 是微软当初提出来的，后来又称 CIFS（Common Internet File System）。--><p>Reference:<br><a href="https://www.cnblogs.com/gzdaijie/p/5194033.html" target="_blank" rel="noopener">https://www.cnblogs.com/gzdaijie/p/5194033.html</a><br><a href="https://ywnz.com/linuxjc/2636.html" target="_blank" rel="noopener">https://ywnz.com/linuxjc/2636.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;事情又是这样的，想与实验室一台公用的Linux server和自己的windows的共享资源，毕竟数据拿硬盘拷来拷去太麻烦了。Linux 下有Samba软件可以提供与Windows共享，所以打算用这个来搞一下。&lt;/p&gt;
&lt;h2 id=&quot;以下在-Linux-上操作&quot;&gt;&lt;a h
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://tracyxinwang.site/blog/tags/Linux/"/>
    
      <category term="Samba" scheme="http://tracyxinwang.site/blog/tags/Samba/"/>
    
  </entry>
  
  <entry>
    <title>Playing with Orange Pi - Setting up the system</title>
    <link href="http://tracyxinwang.site/blog/2018/09/27/OrangePi1/"/>
    <id>http://tracyxinwang.site/blog/2018/09/27/OrangePi1/</id>
    <published>2018-09-27T00:04:24.000Z</published>
    <updated>2018-09-27T02:28:51.617Z</updated>
    
    <content type="html"><![CDATA[<p>起因是这样的，想建一个本地的服务器，通过内网穿透的方法，让我在外边的时候也能接入到我实验室的电脑，下载资料或者拷数据。弼哥告诉我用树莓派或者其他的一些派就能做到，于是买了最便宜的<a href="http://www.orangepi.cn/" target="_blank" rel="noopener">香橙派</a>，原因嘛，emm…自然是我喜欢吃橙子多过喜欢吃莓，并不是因为香橙派便宜（呵呵哒）。。。</p><p>本篇文章主要记录拿到香橙派之后的初始配置。</p><h3 id="准备清单"><a href="#准备清单" class="headerlink" title="准备清单"></a>准备清单</h3><ul><li>Orange Pi PC 2: 来自淘宝</li><li>带HDMI的显示器: 用于初始设置时候看</li><li>带USB接口的键盘：开机需要用户名密码OK?</li><li>网线</li><li>圆孔那种电源线：我能说我买的这块板子不支持 Micro-USB 吗。。</li><li>TF卡及读卡器</li></ul><h2 id="将操作系统写入TF卡"><a href="#将操作系统写入TF卡" class="headerlink" title="将操作系统写入TF卡"></a>将操作系统写入TF卡</h2><p>新到的派是没有操作系统的，既然作为一个小主机，那必然是需要操作系统来支持的。整个过程大致是这样的，操作系统的镜像将会被拷入TF卡，然后将TF卡插入派里面，启动派就OK了。</p><h3 id="操作系统的下载"><a href="#操作系统的下载" class="headerlink" title="操作系统的下载"></a>操作系统的下载</h3><p>操作系统是通过 <a href="https://www.openmediavault.org/" target="_blank" rel="noopener">openmediavault</a> 镜像下载的, 以下简称OMV。</p><blockquote><p>OMV 是个开源的基于Debian Linux的下一代网络附加存储(network attached storage (NAS))解决方案。(来自官网)<br>可用于家庭环境或小型的办公环境等场景。</p></blockquote><p>也就是说，我们可以直接下载这个OMV，它已经集成了Linux系统，并且还包含其他拓展，方便后续的使用。</p><p>进入官网后，点击下载，因为我们是会讲它写入TF卡中，所以这里我们下载ISO镜像，<a href="https://sourceforge.net/projects/openmediavault/files/" target="_blank" rel="noopener">点进去</a>之后会发现有很多可适用的文件，点击第一个 “OMV 4.x for Single Board Computers”, <a href="https://sourceforge.net/projects/openmediavault/files/OMV%204.x%20for%20Single%20Board%20Computers/" target="_blank" rel="noopener">进去</a>之后会发现竟然有Orange Pi对应的安装包！找到那个 <code>OMV_4_Orange_Pi_PC_2.img.xz</code> 下载下来就好了。至此，操作系统下载部分完成。</p><h3 id="操作系统写入"><a href="#操作系统写入" class="headerlink" title="操作系统写入"></a>操作系统写入</h3><p>下载完之后，就是要将该操作系统写入到TF卡中了。写入软件用的是 <a href="https://etcher.io/" target="_blank" rel="noopener">Etcher</a>, 没有什么特别的原因，就是简单，只有三步，多余的统统不要。。。 下载Etcher的安装包并安装好之后，打开该软件</p><ul><li>第一步是 <code>Select image</code>, 就选择刚刚下载的那个OMV的镜像</li><li>第二步是 <code>Select drive</code>, 默认为你的TF卡已经插入电脑并且能看到，选择你的TF卡对应的盘，注意不要选错了。。选到自己电脑本身的盘的话就GG了。。。</li><li>第三步就是 <code>Flash!</code>, 然后你就静等它写入并最后看到完成就好了。然后退出TF卡，放到Orange Pi对应的口中去。</li></ul><p>这个过程中要注意的是，因为这个TF卡在被写入过程中是会被软件反复插拔的， windows 就会弹出一些提醒，不用管那些提醒，都叉掉。<br>至此操作系统写入部分完成。</p><h2 id="启动-Orange-Pi-并配置"><a href="#启动-Orange-Pi-并配置" class="headerlink" title="启动 Orange Pi 并配置"></a>启动 Orange Pi 并配置</h2><h3 id="硬件连接"><a href="#硬件连接" class="headerlink" title="硬件连接"></a>硬件连接</h3><p>如下图：<br><img src="/blog/images/pi_1.jpg" width="50%" height="50%"></p><ul><li>电源是那个圆孔的</li><li>HDMI接你的显示器</li><li>USB那个接的键盘</li></ul><h3 id="更改密码"><a href="#更改密码" class="headerlink" title="更改密码"></a>更改密码</h3><p>接入显示器之后就看到出现一串关于OMV的一些东西，最下面是这个:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">orangepipc2 login:</span><br></pre></td></tr></table></figure></p><p>这个即是要你输入用户名，初始用户名是 <code>root</code>，输入之后出现这个：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Password:</span><br></pre></td></tr></table></figure></p><p>那就是要你输入密码了，初始密码为 <code>openmediavault</code>. 注意Linux系统下输入密码是不会显示的，自我感觉输完之后按回车就行了。然后会要求你更改初始密码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(current) UNIX password:</span><br><span class="line">Enter new UNIX password:</span><br><span class="line">Retype new UNIX password:</span><br></pre></td></tr></table></figure></p><p>以此输入就可以了。接下来你就会看到一个大大的 <code>OrangePiPC2</code> 的字样。。接着一些Welcome和系统的基本配置信息，如内存，CPU等等<br>最下面是Linux的命令行界面了：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roo@orangepipc2:~<span class="comment"># _</span></span><br></pre></td></tr></table></figure></p><p>这就表示你可以完全操作这个系统了</p><h2 id="设置-SSH-登录"><a href="#设置-SSH-登录" class="headerlink" title="设置 SSH 登录"></a>设置 SSH 登录</h2><p>因为我们现在是接入显示器来看这个操作界面的，但是为了这么个小PC专门搞个显示器是有点不太合适的。Linux系统的一大好处就是可以通过SSH远程登录操作，所以这里记录设置SSH设置。</p><h3 id="查看IP-并设置为固定IP"><a href="#查看IP-并设置为固定IP" class="headerlink" title="查看IP 并设置为固定IP"></a>查看IP 并设置为固定IP</h3><p>首先请插上网线。。。要远程登录，就需要主机的IP地址，插好网线后，输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip a</span><br></pre></td></tr></table></figure></p><p>然后就能看到出来下面这种：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1: lo XXX</span><br><span class="line">2: eth0: XXX</span><br><span class="line">    link/ether XXX</span><br><span class="line">    inet 192.168.3.78/24 brd XXX</span><br><span class="line">    inet6 XXX</span><br></pre></td></tr></table></figure></p><p>XXX 是省略的内容。。。那个<code>eth0</code>下面的<code>inet</code>后面的就是派的ip地址了。由于这个IP是动态的，加入哪天这个IP变了，那我们就SSH不上了，所以最好是设置一个静态的IP，步骤如下：<br>输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/network/interfaces</span><br></pre></td></tr></table></figure></p><p>然后就会打开一个文件，找到如下字行并修改：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iface eth0 inet static</span><br><span class="line">address 193.168.3.222</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">gateway 192.168.3.1</span><br></pre></td></tr></table></figure></p><p>即改为static 的，同时改下面的地址为你想要的网址，子网掩码，网关都设置为跟你目前所在的局域网对应<strong>一致</strong>就行了。<br>更改好之后，按住 <code>ctrl+x</code> 就能退出编辑页面了，然后会提示你是否保存，输入<code>Y</code>再回车就好了。一定不要把文件名改了！直接回车！<br>更改网络之后需要重启主机才能生效，输入 <code>reboot</code> 就好了</p><h3 id="设置SSH"><a href="#设置SSH" class="headerlink" title="设置SSH"></a>设置SSH</h3><p>正常情况下，linux是不会让远程登录的，所以需要更改配置。输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></p><p>找到下面有个 <code>PermitRootLogin</code>, 更改为<code>yes</code>，表明你可以以root身份进入系统，当然这样做是很冒险的，最好的办法是新建一个账户，通过那个账户来远程登录，但是目前基础版的话我就这样设置了。改完之后 <code>ctrl+x</code> 并保存就好了，然后重启ssh 服务：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service ssh restart</span><br></pre></td></tr></table></figure></p><h3 id="远程登录"><a href="#远程登录" class="headerlink" title="远程登录"></a>远程登录</h3><p>设置完ssh就该来试试远程登录的效果了！在我Windows下，我用的是 <a href="https://mobaxterm.mobatek.net/" target="_blank" rel="noopener">MobaXterm</a> 软件来登录的，当然传统的<code>WinSCP</code>, <code>Putty</code> 都是可以的。<br>打开MobaXterm软件，点击<code>New session</code>, <code>Remote host</code>输入派的IP:192.168.3.222, 勾选<code>Specify name</code> 并写上 <code>root</code>, <code>Port</code>口保持22不变。然后就可以接入了，需要你输入密码，之后就能远程控制了！</p><p>需要主要的是，如果遇到 <code>Access denied</code> 情况，那就可能是SSH那里没有更改对，或者密码跟用户名不对应。<br>前面说了，最安全的方法是新建一个账户，用这个账户登，这样的话，这里的name就应该是那个账户名，密码也应该是那个密码。</p><h2 id="关闭-Orange-Pi"><a href="#关闭-Orange-Pi" class="headerlink" title="关闭 Orange Pi"></a>关闭 Orange Pi</h2><p>在shell 里面直接输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo shutdown -h now</span><br></pre></td></tr></table></figure></p><p>Reference:<br><a href="http://www.orangepi.cn/quickstartcn/startcn_2e17631567a387efd2a3d252fa79.html" target="_blank" rel="noopener">Orange Pi website</a><br><a href="https://www.instructables.com/id/Orange-Pi-Plus-2-Armbian/" target="_blank" rel="noopener">https://www.instructables.com/id/Orange-Pi-Plus-2-Armbian/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;起因是这样的，想建一个本地的服务器，通过内网穿透的方法，让我在外边的时候也能接入到我实验室的电脑，下载资料或者拷数据。弼哥告诉我用树莓派或者其他的一些派就能做到，于是买了最便宜的&lt;a href=&quot;http://www.orangepi.cn/&quot; target=&quot;_blank
      
    
    </summary>
    
    
      <category term="OrangePi" scheme="http://tracyxinwang.site/blog/tags/OrangePi/"/>
    
      <category term="Linux" scheme="http://tracyxinwang.site/blog/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>My First Post - 献给Hexo</title>
    <link href="http://tracyxinwang.site/blog/2018/09/25/My-First-Post/"/>
    <id>http://tracyxinwang.site/blog/2018/09/25/My-First-Post/</id>
    <published>2018-09-25T00:23:14.000Z</published>
    <updated>2018-09-27T01:39:31.641Z</updated>
    
    <content type="html"><![CDATA[<p>在网上查找资料的时候偶然看到有人提到用Hexo来写博客，界面非常简洁，而且支持 markdown 解析，瞬间打算在我<a href="http://tracyxinwang.site/">个人的学术网站</a>上加入这个blog页面。之前写博客都是在现成的博客网站上写的，比如 网易的 和 <a href="https://blog.csdn.net/u013036695" target="_blank" rel="noopener">CSDN</a> 这种还算比较大型的技术博客，无奈广告实在是太多了，后来转战 google 的 blog，但是它的编辑页面实在是难用，就放弃了。所以现在打算试试这个 Hexo。</p><p>Hexo 用官方的来说就是一个快速，简洁且高效的博客框架。我用了大概不到一天的时间，就从安装到部署搞定了，虽然过程很崎岖，掉了很多坑。。。但是总体还是觉得挺不错的，所以接下来我会大致叙述一下整个过程，希望能够让看到的朋友少掉坑。</p><p>先附上<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>网址，也有<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">中文</a>的。个人觉得基本上按照网页上的指导，前面的步骤基本都是没问题的。由于我是一开始就打算在我个人网页中加入这个博客页面作为一个子页面，所以我是在 coding.net 而非 git 上面建库。另外操作系统是win10.</p><h3 id="准备工作及环境"><a href="#准备工作及环境" class="headerlink" title="准备工作及环境"></a>准备工作及环境</h3><ol><li>在 coding 上新建一个项目库，命名 “blog”，同时设置 <a href="https://coding.net/pages/" target="_blank" rel="noopener">Pages服务</a></li><li>在电脑上一个你觉得不错的位置新建一个文件夹，命名随意，这个名字没太大关系，我命名为”Hexo_blog”, 这文件夹是用来放所有跟你这个博客相关的东西的。</li></ol><h3 id="安装及配置"><a href="#安装及配置" class="headerlink" title="安装及配置"></a>安装及配置</h3><h4 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h4><p>须有 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a> 和 <a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a></p><ul><li>Node.js 安装：在官网下载好你电脑对应的版本之后，点安装包进行安装，在接近最后一步是，选择 “Add to PATH” 选项进行安装</li><li>git 安装：略</li></ul><h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo:"></a>安装 Hexo:</h4><p>使用 npm 安装 Hexo:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure></p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><ol><li><p>新建框架<br> 去到你刚刚创建的那个要放所有Hexo东西的文件夹下，执行以下命令：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p> 这个命令就是告诉hexo这里要建一个框架，然后它就会生成整个框架所需要的材料。<br> 新建完成后，可以看见有很多的文件夹，具体每个文件夹啥作用请看<a href="https://hexo.io/zh-cn/docs/setup" target="_blank" rel="noopener">官网</a>。这里面有一个叫 _config.yml 的东西，非常重要，是你整个博客配置的基础。</p></li><li><p>基本配置(只列出可能有坑的地方)：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">language: zh-Hans</span><br><span class="line">url: http://yoursite.com/blog</span><br><span class="line">root: /blog/</span><br></pre></td></tr></table></figure><p> 前面说了我是打算我个人网站子页面下加入这个blog，所以那个url, 对我来说是后面加上这个子目录名字，然后root那个地方也需要改成，如果你本身是一个网页来的(比如git的页面)，那就不用设置这个root了。其他的配置具体可参见<a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">网页</a>。最后关于主题(theme)和部署(deploy)的，接下来讲。</p></li></ol><h4 id="主题-theme-的确定"><a href="#主题-theme-的确定" class="headerlink" title="主题(theme)的确定"></a>主题(theme)的确定</h4><p>主题顾名思义就是你的博客的风格，Hexo有很多模板可供选择，要使用哪个模板，就需要将该主题拷贝到themes文件夹下，然后在_config.yml 更改主题的名字。我用的是 <a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">yilia</a> 的主题，下面以此为例写步骤：</p><ul><li><p>进入你放创建的hexo文件夹(e.g. Hexo_blog)下, 使用如下命令安装：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure><p>  这需要你先找到该主题的github，也可以直接下载然后解压到你的themes文件夹下</p></li><li>进入Hexo_blog 下面那个 _config.yml， 修改 ‘themes: yilia’</li><li>进入Hexo_blog/themes/yilia, 里面也有一个 _config.yml, 在上面更改你想命名的主页的menu和其他的基本个人设置</li></ul><h3 id="开写你的第一篇博客"><a href="#开写你的第一篇博客" class="headerlink" title="开写你的第一篇博客"></a>开写你的第一篇博客</h3><p>这个很简单，直接执行：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new  my-first-post</span><br></pre></td></tr></table></figure></p><p>那个 my-first-post 是你的文章题目。所有的文章都会被放在 /source/posts 文件夹下。在这个文件夹下你可以看到一个 my-first-post.md 的文件。打开这个文件然后就在下面用markdown的语法就写好了。</p><h3 id="在本地查看并生成静态网页"><a href="#在本地查看并生成静态网页" class="headerlink" title="在本地查看并生成静态网页"></a>在本地查看并生成静态网页</h3><ol><li><p>由于有文件的改动，所以需要先生成静态文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure></li><li><p>生成之后可以hexo server来查看新建的文章或者网站：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure></li></ol><p>然后就能看到说在 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 下可以打开。如果一切都没问题，那么就可以部署到真的网页上面了。</p><h3 id="部署-（这部分很让我头疼）"><a href="#部署-（这部分很让我头疼）" class="headerlink" title="部署 （这部分很让我头疼）"></a>部署 （这部分很让我头疼）</h3><p>先说步骤：</p><p>1.git-SSH 配置：</p><pre><code>- 查看你的git user.email: &apos;git config user.email&apos;- 假如得到的email是 xx@gamil.com, 生成这个email对应的密匙: &apos;ssh-keygen -t rsa -C &quot;xx@gmail.com&quot;&apos;- 接下来会让你enter file to save the key，enter passphrase, enter passphrase again, 可以不需要设置这些秘密啥的，所以每一个问题出现，都按enter, 即连续3个回车。- 然后会得到两个文件 &apos;id_rsa&apos; 和 &apos;id_tsa.pub&apos;- 复制刚刚生成的密匙(其中xx/xx是你密匙生成的位置，在上一步骤中会显示)： &apos;clip &lt; xx/xx/id_rsa.pub&apos;- 在准备步骤中新建的那个库下，打开设置-添加公匙，将刚刚复制的内容粘贴到上面，至此，配置完成。- 检查是否真的完成：输入&apos;ssh -T xx@gmail.com&apos;，然后选择 &apos;yes&apos;, 接着看到 Hi XX, You&apos;ve successfully authenticated 等等，就表明已经设置成功了</code></pre><p>2._config.yml 文件deploy的更改：<br>    应该是在最下面，有个deploy，在下面写上你的库的ssh地址等如下：</p><pre><code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@git.coding.net:XX/blog.git</span><br><span class="line">  branch: master</span><br><span class="line">  message: update my blog.</span><br></pre></td></tr></table></figure></code></pre><p>3.部署：<br>先下载deployer: ‘npm install hexo-deployer-git –save’<br>然后执行：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>然后就可以看你的网页有没有变化了。</p><p>由于我是打算直接在我的个人网站下直接建一个子网页，所以一开始一直想的是deploy到我之前的那个库里面，我以为是直接添加到那个git repo 里面就好，没想到一deploy之后，发现之前的内容全没有了，然后才意识到应该是force push上去的，没有pull等过程，所以直接啥都没有了，没办法我又只好force push 我之前的网站内容上去，才将原网页复原。由于我不知道怎么可以只deploy到一个子folder里面去，所以我又新建了一个库叫blog，也就是文章开头写的那样。然后将这个库的地址作为deploy的git 地址，才可以。我发现coding上可以直接设置子静态页面，所以我也直接就将这个网页的地址链接到我原个人网站上，算是间接完成吧。</p><p>同时这过程中遇到一些问题，列出来纪念一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Error: Host key verification failed.</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line">Please make sure you have the correct access rights and the repository exists.</span><br></pre></td></tr></table></figure></p><p>需设置SSH密匙来进行。且注意需删除之前生成的 git 那个文件夹。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在网上查找资料的时候偶然看到有人提到用Hexo来写博客，界面非常简洁，而且支持 markdown 解析，瞬间打算在我&lt;a href=&quot;http://tracyxinwang.site/&quot;&gt;个人的学术网站&lt;/a&gt;上加入这个blog页面。之前写博客都是在现成的博客网站上写的，比
      
    
    </summary>
    
    
      <category term="杂文" scheme="http://tracyxinwang.site/blog/tags/%E6%9D%82%E6%96%87/"/>
    
      <category term="碎碎念" scheme="http://tracyxinwang.site/blog/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
      <category term="hexo" scheme="http://tracyxinwang.site/blog/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Markdown Template</title>
    <link href="http://tracyxinwang.site/blog/2018/09/24/hello-world/"/>
    <id>http://tracyxinwang.site/blog/2018/09/24/hello-world/</id>
    <published>2018-09-24T11:37:10.728Z</published>
    <updated>2018-09-27T02:24:32.588Z</updated>
    
    <content type="html"><![CDATA[<p>This is just a markdown template for me to take a reference when I write blogs.</p><h2 id="About-lists"><a href="#About-lists" class="headerlink" title="About lists"></a>About lists</h2><h3 id="Unordered-lists"><a href="#Unordered-lists" class="headerlink" title="Unordered lists"></a>Unordered lists</h3><ul><li>list 1<ul><li>list 1.1</li><li>list 1.2</li><li>list 1.3</li></ul></li><li>list 2</li><li>list 3</li></ul><h3 id="Ordered-lists"><a href="#Ordered-lists" class="headerlink" title="Ordered lists"></a>Ordered lists</h3><ol><li>list 1<ol><li>list 1.1</li><li>list 1.2</li></ol></li><li>list 2</li><li>list 3</li></ol><h2 id="About-citation"><a href="#About-citation" class="headerlink" title="About citation"></a>About citation</h2><blockquote><p>This is a citation from others</p></blockquote><h2 id="About-font-formatting"><a href="#About-font-formatting" class="headerlink" title="About font formatting"></a>About font formatting</h2><h3 id="This-is-a-italic-sentence"><a href="#This-is-a-italic-sentence" class="headerlink" title="This is a italic sentence."></a>This is a <em>italic</em> sentence.</h3><h3 id="This-is-a-bold-sentence"><a href="#This-is-a-bold-sentence" class="headerlink" title="This is a bold sentence."></a>This is a <strong>bold</strong> sentence.</h3><p>And be careful that there is no space between the text and the symbol.</p><h2 id="Links-and-figures"><a href="#Links-and-figures" class="headerlink" title="Links and figures"></a>Links and figures</h2><h3 id="Here-is-a-link-link"><a href="#Here-is-a-link-link" class="headerlink" title="Here is a link: link"></a>Here is a link: <a href="https://hexo.io" target="_blank" rel="noopener">link</a></h3><h3 id="Here-is-a-figure"><a href="#Here-is-a-figure" class="headerlink" title="Here is a figure: "></a>Here is a figure: <img src="https://hexo.io" alt="figure link"></h3><p>The following is a dividing line</p><hr><h2 id="Insert-a-table"><a href="#Insert-a-table" class="headerlink" title="Insert a table"></a>Insert a table</h2><table><thead><tr><th>header 1</th><th>header 2</th></tr></thead><tbody><tr><td>(1,1)</td><td>(1,2)</td></tr><tr><td>(2,1)</td><td>(2,2)</td></tr></tbody></table><h2 id="Insert-a-to-do-list"><a href="#Insert-a-to-do-list" class="headerlink" title="Insert a to-do list"></a>Insert a to-do list</h2><ul><li style="list-style: none"><input type="checkbox"> To do 1<ul><li style="list-style: none"><input type="checkbox"> To do 1.1</li><li style="list-style: none"><input type="checkbox"> To do 1.2</li></ul></li><li style="list-style: none"><input type="checkbox"> To do 2</li><li style="list-style: none"><input type="checkbox" checked> Finished 1</li><li style="list-style: none"><input type="checkbox" checked> Finshed 2</li></ul><p>Be careful that the clicked one should be small x inside.</p><h2 id="Add-code"><a href="#Add-code" class="headerlink" title="Add code"></a>Add code</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><h2 id="Add-math"><a href="#Add-math" class="headerlink" title="Add math"></a>Add math</h2><p>$$x+y=z$$</p><p>$x+y=z$</p><p>You need to turn the mathjax as “true” to make sure that it works.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;This is just a markdown template for me to take a reference when I write blogs.&lt;/p&gt;
&lt;h2 id=&quot;About-lists&quot;&gt;&lt;a href=&quot;#About-lists&quot; class=&quot;he
      
    
    </summary>
    
    
  </entry>
  
</feed>
